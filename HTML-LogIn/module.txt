module html start here....

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home Page</title>
    <link rel="stylesheet" href="./module.css">
    <link rel="stylesheet" href="./bootstrap-5.0.2-dist/bootstrap-5.0.2-dist/css/bootstrap.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

</head>
<body>
  <!-- <a href="/HTML-LogIn/Userinfo.html"></a> -->
  <!-- <section  id="sidenavsection">
    <div class="" id="sidebar" style="height: 86% !important; overflow-y: auto !important; white-space: nowrap !important;">
       <button id="closeButton"> <i class="fa-solid fa-xmark"></i> </button> -->
      <!-- <h4 id="clickModuleName">NDE ERP System</h4>
      <div>
        <p onclick="blocknonemenudata()">My Menu <i class="fa-solid fa-chevron-up fa-rotate-180"></i></p>
        <div id="loadMenu" style="display: none;">

        </div>
      </div>
      <div>
        <p onclick="blocknoneReportdata()">My Report <i class="fa-solid fa-chevron-up fa-rotate-180"></i></p>
        <div id="loadReport" style="display: none;">

        </div>
      </div>
    </div>
  </section> -->

  <!-- <section id="MenuAndSideNavSection">
    <div class="container-fluid text-center">
        <div class="row" style=" background: linear-gradient(to top, #86c0cf, #bfe1f8); box-shadow: 5px 0 5px 2px #cecece;">
          <div class="col-1">
            <div class="pt-3 ps-1">
              <button id="sidebarButton"> <i class="fa-solid fa-bars"></i> </button>
              <div><label class="text-wrap" id="m-names" style="line-height: 1;"><h5>NDE ERP System</h5></label></div>
            </div>
          </div>
          <div id="menubar" class="col-10">
          </div>
          <div class="col-1">
            <div style="position: relative; top: 15px;">
              <button onclick="showpopup()"> <i class="fa-solid fa-user"></i> </button>
              <p id="userName" for=""></p>
            </div>
            <div id="showpopup" style="display: none; height: 100px; width: 100px; position: absolute; background-color: aquamarine;">
              <button onclick="logOut()"> logOut</button>
            </div>
          </div>
        </div>
    </div>
</section> -->

  <!-- <header>
  <div class="container">
    <div>
      <div>
        <p id="m-names">NDE ERP System</p>
      </div>
    </div>
  </div>

  <div id="menubar" class="menubar ">
  </div>
  <div class="profile">
    <a class="link" href="#" style="text-decoration: none">
      <p>Profile</p>
    </a> 
    <a onclick="logOut()"><button class="logout_btn px-2 py-1 rounded fw-bold" style="align-items: center;">Log Out </button></a>
  </div>
</header> -->
  
    <script src="./module.js"></script>
    <script src="./bootstrap-5.0.2-dist/bootstrap-5.0.2-dist/js/bootstrap.js"></script>
    <script src="./bootstrap-5.0.2-dist/bootstrap-5.0.2-dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
module html end here....

// module js start here....
let user = localStorage.getItem("user");

fetch(`https://localhost:7241/api/Module/GetUserModuleByUserCode/${user}`)
  .then(response => response.json())
  .then(data => {
    console.log("load module bar data",data);
    localStorage.setItem("moduleId",data[0].ModuleId);
    localStorage.setItem("moduleName",data[0].ModuleName);
    viewnone();
    displayModules(data);
      // const cardContainer = document.getElementById('menubar');
  })
  .catch(error => console.error('Error:', error));

    
function displayModules(modules) {
    // console.log(modules,"modules");
    const menubar = document.getElementById("menubar");
        menubar.innerHTML="";


        modules.forEach(module => {

          const buttonTag = document.createElement("button");
          buttonTag.style.border = 'none';
          buttonTag.style.backgroundColor = '#78acba';
          buttonTag.style.borderRadius = '6px';
          const spanTag = document.createElement("span");
          
          // Set the onclick event for the spanTag
          spanTag.setAttribute("onclick", `loadmenuByModule('${module.ModuleId}', '${module.ModuleName}', this)`);
          spanTag.setAttribute("id", `${module.ModuleId}`);
          spanTag.style.width = '85px';
          spanTag.style.height = '65px';
          spanTag.style.color = '#fff';
          // Add CSS styles for centering the text and adjusting the text size
          spanTag.style.display = 'flex';
          spanTag.style.alignItems = 'center';
          spanTag.style.justifyContent = 'center';
          spanTag.style.fontSize = '14px'; // Adjust the font size as needed
          spanTag.style.fontWeight = 'bold'; // Optionally set the font weight
          
          spanTag.innerHTML = `${module.ModuleName}`;
          
          buttonTag.appendChild(spanTag);
          menubar.appendChild(buttonTag);
          document.getElementById("userName").innerText = modules[0].UserName;
          

      });
    // console.log("modules[o].userName",modules[0].UserName);
    // document.getElementById("userName").innerText = modules[0].userName;

}


function viewnone()
{
    var name = localStorage.getItem("moduleName");
    document.getElementById("m-names").innerHTML= name;
    // document.getElementById("clickModuleName").innerHTML=ModuleName;
}

// sidenavbar start
document.getElementById('sidebarButton').addEventListener('click', function() {
  document.getElementById('sidebar').classList.toggle('active');
});

// document.getElementById('closeButton').addEventListener('click', function() {
//   document.getElementById('sidebar').classList.remove('active');
// });
//sidenavbar end

function loadmenuByModule(ModuleId, ModuleName, element){
  localStorage.setItem("moduleId",ModuleId);
  localStorage.setItem("moduleName",ModuleName);

  // element.style.color = "#20586d";
  // element.style.fontSize = "15px";
  // font-size: 15px;
  viewnone();
  let moduleId = localStorage.getItem("moduleId");
  let user = localStorage.getItem("user");
  let CompanyId = localStorage.getItem("CompanyId");

  fetchDataAndDisplayMenu(user, moduleId, CompanyId);



// fetch(`https://localhost:7241/api/Menu/GetMenuByUserAndModuleAndCompany/${user}/${ModuleId}/${CompanyId}`)
//   .then(response => response.json())
//   .then(data => {
//     console.log("inside api menu",data);
//     displayMenuList(data);
//     //const cardContainer = document.getElementById('menubar');
//   })
//   .catch(error => console.error('Error:', error));

}

let ModuleId = localStorage.getItem("moduleId");
let userCode = localStorage.getItem("user");
let CompanyId = localStorage.getItem("CompanyId");

fetchDataAndDisplayMenu(userCode, ModuleId, CompanyId);

async function fetchDataAndDisplayMenu(user, ModuleId, CompanyId) {
  try {
    const response = await fetch(`https://localhost:7241/api/Menu/GetMenuByUserAndModuleAndCompany/${user}/${ModuleId}/${CompanyId}`);
    const data = await response.json();
    console.log("inside api menu", data);
    displayMenuList(data);
  } catch (error) {
    // console.error('Error:', error);
  }
}





const resultArraymenu = [];
function displayMenuList(jsonData){
  let loadMenu = document.getElementById("loadMenu");
  loadMenu.innerHTML="";


  const uniqueParentIds = [...new Set(jsonData.map(obj => obj.parentId))];
  console.log("uniqueParentIds",uniqueParentIds);
  resultArraymenu.length = 0;
  let menuItemName = ''

  uniqueParentIds.forEach(parentId => {
  const nestedObjects = jsonData.filter(obj => obj.parentId === parentId);
  jsonData.forEach(function(item){
    if(item.menuId === parentId){
     menuItemName = item.menuName

    }
  })
  resultArraymenu.push({ parentId, menuItemName, nestedObjects });
  });
  console.log(resultArraymenu);

  for (let i = 0; i < jsonData.length; i++) {
    if(jsonData[i].menuId == jsonData[i].parentId)
    {

      const mainDiv = document.createElement("div");
      mainDiv.setAttribute('class', `class-${resultArraymenu[i].parentId.toString()}`);
      mainDiv.style.display="block";
      let childelement;
      if(jsonData[i].navigateUrl!=null){

          childelement = document.createElement("a");
          childelement.setAttribute("href", `${resultArraymenu[i].navigateUrl.toString()}`);
          // childelement.setAttribute("target", "_blank");
      }
      else{
        childelement = document.createElement("label");
        childelement.setAttribute("onclick", "childchildmenu(this)");
      }
      childelement.style.display = 'block';
      childelement.setAttribute('id', resultArraymenu[i].parentId.toString());
      childelement.innerText=resultArraymenu[i].menuItemName;
      mainDiv.appendChild(childelement);
      loadMenu.appendChild(mainDiv);
    }

  }

}

function childchildmenu(element){
  var elementId = element.id;
  var div = document.getElementById(elementId);
  var parentDiv = document.querySelector(`.class-${elementId}`);
  // var parentDiv = div.closest(`.class-${elementId}`);
  console.log("parentDiv.children.length",parentDiv.children.length);
  // var div = document.getElementById(elementId);
  // var parentDiv = div.closest(`.class-${elementId}`);
  // var childDivs = parentDiv ? parentDiv.querySelectorAll(`.class-${elementId}`) : [];
  


  // console.log("parentDiv",parentDiv);
  if(parentDiv.children.length<=1)
  {
    for (let i = 0; i < resultArraymenu.length; i++) {
      if(elementId == resultArraymenu[i].parentId){

        const nestedObjects = resultArraymenu[i].nestedObjects;
        for (let j = 0; j < nestedObjects.length; j++) {

          if(nestedObjects[j].menuId!=nestedObjects[j].parentId){
            const childmainDiv = document.createElement("div");
            childmainDiv.style.display="block";
            childmainDiv.setAttribute('class', `class-${nestedObjects[j].menuId.toString()}`);
            let childDiv;
            if(nestedObjects[j].navigateUrl!=null){
  
              childDiv = document.createElement("a");
              // childDiv.setAttribute("href", '#');
              childDiv.setAttribute("href", `${nestedObjects[j].navigateUrl.toString()}`);
              // childDiv.setAttribute("target", "_blank");
            }
            else{
              childDiv = document.createElement("div");
              childDiv.setAttribute("onclick", "childchildmenu(this)");
            }
            childDiv.setAttribute('id', nestedObjects[j].menuId.toString());
            const menuName = nestedObjects[j].menuName;
            childDiv.innerText = menuName;
            childDiv.style.display = 'block';
            childmainDiv.appendChild(childDiv);
            parentDiv.appendChild(childmainDiv);
  
          }

        }
      }
    }
  }
  else{
    // Get all child div elements
    // const childDivs = div.getElementsByTagName("div");
    var parentDiv = document.querySelector(`.class-${elementId}`);
    console.log("parentDiv", parentDiv);
    
    // Toggle the display property of child divs
    for (let i = 1; i < parentDiv.children.length; i++) {
      const childDiv = parentDiv.children[i];
      if (childDiv.style.display === 'none') {
        childDiv.style.display = 'block';
      } else {
        childDiv.style.display = 'none';
      }
    }
    
  }

}




// fetch("https://localhost:7241/api/User/login", {
//   method: "POST",
//   headers: {
//     "Content-Type": "application/json"
//   },
//   body: JSON.stringify(user)
// })


//for report data
fetch(`https://localhost:7241/api/Report/GetReportByUserAndModuleAndCompany/${user}`)
    .then(response => response.json())
    .then(data => {
      console.log("inside report api",data);
      displayReportList(data);
    })
    .catch(error =>{

    }
      // console.error('Error:', error)
      );




const resultArrayreport = [];
function displayReportList(jsonData){
  resultArrayreport.length =0;
  let loadMenu = document.getElementById("loadReport");
  loadMenu.innerHTML="";


  const uniqueParentIds = [...new Set(jsonData.map(obj => obj.parentId))];
  let menuItemName = ''

  uniqueParentIds.forEach(parentId => {
  const nestedObjects = jsonData.filter(obj => obj.parentId === parentId);
  jsonData.forEach(function(item){
    if(item.reportId === parentId){
     menuItemName = item.displayName
    }
  })
  resultArrayreport.push({ parentId, menuItemName, nestedObjects });
});

for (let i = 0; i < jsonData.length; i++) {
  if(jsonData[i].reportId == jsonData[i].parentId)
  {

      const mainDiv = document.createElement("div");
      mainDiv.setAttribute('class', `class-${resultArrayreport[i].parentId.toString()}`);
      mainDiv.style.display="block";
      let childelement;
      if(jsonData[i].reportPath!=null){

          childelement = document.createElement("a");
          childelement.setAttribute("href", '#');
          childelement.setAttribute("target", "_blank");

      }
      else{
        childelement = document.createElement("label");
        childelement.setAttribute("onclick", "childchildreport(this)");
      }
      childelement.style.display = 'block';
      childelement.setAttribute('id', resultArrayreport[i].parentId.toString());
      // mainDiv.setAttribute = ('id',`${resultArraymenu[i].parentId}`);
      // mainDiv.onclick = blocknoneReport;
      childelement.innerText=resultArrayreport[i].menuItemName;
      mainDiv.appendChild(childelement);
      loadMenu.appendChild(mainDiv);
  }
}


}

function childchildreport(element){
  var elementId = element.id;
  var div = document.getElementById(elementId);
  var parentDiv = document.querySelector(`.class-${elementId}`);
  if(parentDiv.children.length<=1)
  {
    for (let i = 0; i < resultArrayreport.length; i++) {
      if(elementId == resultArrayreport[i].parentId){

        const nestedObjects = resultArrayreport[i].nestedObjects;
        for (let j = 0; j < nestedObjects.length; j++) {

          if(nestedObjects[j].reportId!=nestedObjects[j].parentId){
            const childmainDiv = document.createElement("div");
            childmainDiv.style.display="block";
            childmainDiv.setAttribute('class', `class-${nestedObjects[j].reportId.toString()}`);
            let childDiv;
            if(nestedObjects[j].reportPath!=null){
  
              childDiv = document.createElement("a");
              childDiv.setAttribute("href", '#');
              childDiv.setAttribute("target", "_blank");

            }
            else{
              childDiv = document.createElement("div");
              childDiv.setAttribute("onclick", "childchildreport(this)");
            }
            childDiv.setAttribute('id', nestedObjects[j].reportId.toString());
            childDiv.innerText = nestedObjects[j].displayName;
            childDiv.style.display = 'block';
            childmainDiv.appendChild(childDiv);
            parentDiv.appendChild(childmainDiv);
          }

        }
      }
    }
  }  else{
    // Get all child div elements
    // const childDivs = div.getElementsByTagName("div");
    var parentDiv = document.querySelector(`.class-${elementId}`);
    console.log("parentDiv", parentDiv);
    
    // Toggle the display property of child divs
    for (let i = 1; i < parentDiv.children.length; i++) {
      const childDiv = parentDiv.children[i];
      if (childDiv.style.display === 'none') {
        childDiv.style.display = 'block';
      } else {
        childDiv.style.display = 'none';
      }
    }
    
  }
}

function blocknoneReport() {
  // Get all child div elements
  const childDivs = this.getElementsByTagName("div");

  // Toggle the display property of child divs
  for (let i = 0; i < childDivs.length; i++) {
    const childDiv = childDivs[i];
    if (childDiv.style.display === 'none') {
      childDiv.style.display = 'block';
    } else {
      childDiv.style.display = 'none';
    }
  }
}

function blocknoneReportdata(){
  let loadMenu = document.getElementById("loadReport");
  if (loadMenu.style.display === 'none') {
    loadMenu.style.display = 'block';
  } else {
    loadMenu.style.display = 'none';
  }
  
}

function blocknonemenudata(){
  let loadMenu = document.getElementById("loadMenu");
  if (loadMenu.style.display === 'none') {
    loadMenu.style.display = 'block';
  } else {
    loadMenu.style.display = 'none';
  }
  
}



function showpopup(){
  let showpopup = document.getElementById("showpopup");
  if(showpopup.style.display === 'block'){
    showpopup.style.display = 'none';
  }else{
    showpopup.style.display = 'block';
  }
}




if (!localStorage.getItem("mytime")) {
    window.location.href = "./index.html"; // Redirect to login page
    }
    function logOut() {
    window.location.href = "./index.html";
    localStorage.removeItem("mytime");
    }

module js end here....


module css start here....

body {
  font-family: Arial, sans-serif;
  background-color: #f1f1f1;
}

/* sidebar css start   */
#sidebar {
    position: absolute;
    top: 5.4rem;
    left: -230px; /* Hide the sidebar by default */
    width: 230px;
    /* height: 50%; */
    background-color: #bfe1f8;
    padding: 20px;
    transition: left 0.3s ease;
    /* border: 1px solid; */
    /* background-color: #3A98B9; */
    box-shadow: 5px 0 5px -2px #e0e0e0;
  }
  
  #sidebar.active {
    left: 0; /* Show the sidebar when active class is added */
  }
/* sidebar css end   */

/* menubar css start   */
.col-9 {
  /* width: 75%; */
  /* margin: 0 auto; */
}

#menubar {
  /* background-color: #3A98B9; */
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
  border-radius: 5px;
  height: 85px;
}

/* #menubar span {
  color: #3a3a3a;
  font-weight: 500;
  font-size: 14px;
  cursor: pointer;
  padding: 5px 10px;
  margin: 0 5px;
  border-radius: 3px;
  transition: background-color 0.3s ease;
  line-height: 1.5;
  display: grid;

} */

#menubar span:hover {
  color: #20586d;
  font-size: 15px;
}
/* menubar css end   */

.menu-item {
  cursor: pointer;
  display: none; /* Initially hide child menus */
}
.open > .menu-item {
  display: block; /* Show child menus when parent menu is open */
}

/* load menu section start */

/* load menu section end */






module css end here....


    
